// WE DO NOT SUPPORT METHODS YET

@empty @runtime
print: (String) -> ()


type Option(a) {
    Some(a)
    None
}

methods for Option(a) {
    map: ((a) -> b) -> Option(b) 
    map f = this match {
        Some(a) => Some(f(a))
        None => None
    }
}

methods for Option(String) {
  as_string: () -> String
  as_string() = this match {
    Some(inner) => inner
    None => "None"
  }
}



main {
  let b = Option.Some(1)
  print(b.as_string())
}

